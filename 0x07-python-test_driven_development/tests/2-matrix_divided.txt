The ``matrix_divided`` module

Divides all elements of a matrix by a given divisor.

Args:
	matrix (list of lists): The matrix to be divided.
        div (int or float): The divisor.

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Valid input, divide by 2
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

Valid input, divide by 3
>>> matrix_divided([[10, 20], [30, 40]], 3)
[[3.33, 6.67], [10.0, 13.33]]

Invalid input, matrix with non-numeric element
>>> matrix_divided([[1, 2, 'a'], [4, 5, 6]], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Invalid input, rows of different sizes
>>> matrix_divided([[1, 2, 3], [4, 5], [6, 7, 8]], 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

Invalid input, divisor is 0
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

 Invalid input, non-numeric divisor
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], '2')
Traceback (most recent call last):
...
TypeError: div must be a number
